[{"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"2","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"3","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"12","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"13","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"14","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"17","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"18","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"19","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"20"},{"size":742,"mtime":1612638583096,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1611694674200,"results":"23","hashOfConfig":"22"},{"size":560,"mtime":1613103754957,"results":"24","hashOfConfig":"22"},{"size":1394,"mtime":1612465756290,"results":"25","hashOfConfig":"22"},{"size":1242,"mtime":1612456280051,"results":"26","hashOfConfig":"22"},{"size":5804,"mtime":1613240244569,"results":"27","hashOfConfig":"22"},{"size":1939,"mtime":1613104043582,"results":"28","hashOfConfig":"22"},{"size":4986,"mtime":1613002177690,"results":"29","hashOfConfig":"22"},{"size":1916,"mtime":1612397116923,"results":"30","hashOfConfig":"22"},{"size":947,"mtime":1612457296618,"results":"31","hashOfConfig":"22"},{"size":10937,"mtime":1613237180262,"results":"32","hashOfConfig":"22"},{"size":1054,"mtime":1612456181195,"results":"33","hashOfConfig":"22"},{"size":4243,"mtime":1612456173435,"results":"34","hashOfConfig":"22"},{"size":303,"mtime":1612456186138,"results":"35","hashOfConfig":"22"},{"size":4039,"mtime":1612630029687,"results":"36","hashOfConfig":"22"},{"size":484,"mtime":1613348267896,"results":"37","hashOfConfig":"22"},{"size":186,"mtime":1613348341775,"results":"38","hashOfConfig":"22"},{"size":182,"mtime":1613348367596,"results":"39","hashOfConfig":"22"},{"size":182,"mtime":1613348356613,"results":"40","hashOfConfig":"22"},{"size":190,"mtime":1613348407681,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1nhynl3",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["85","86"],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["87","88","89","90"],"import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\n\nfunction RenderCampsite({ campsite }) {\n    return (\n        <div className=\"col-md-5 m-1\">\n            <Card>\n                <CardImg top src={campsite.image} alt={campsite.name} />\n                <CardBody>\n                    <CardText>{campsite.description}</CardText>\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nfunction RenderComments({ comments }) {\n    if (comments) {\n        return (\n            <div className=\"col-md-5 m-1\">\n                <h4>Comments</h4>\n                {comments.map(comment => {\n                    return (\n                        <div key={comment.id}>\n                            <p>{comment.text}<br />{comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\n                        </div>\n                    );\n                })}\n                <CommentForm />\n            </div>\n        );\n    }\n    return <div><CommentForm /></div>;\n}\n\n\nfunction CampsiteInfo(props) {\n    if (props.campsite) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderCampsite campsite={props.campsite} />\n                    <RenderComments comments={props.comments} />\n                </div>\n            </div>\n        );\n    } return <div />;\n}\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this); /*unnecessary but including*/\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        console.log(\"Current state is: \" + JSON.stringify(values));\n        alert(\"Current state is: \" + JSON.stringify(values));\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Button outline onClick={this.toggleModal}>\n                    <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                    className=\"form-control\"\n                                    placeholder=\"Your Name\"\n                                    validators={{\n                                        minLength: minLength(2),\n                                        maxLength: maxLength(15)\n                                    }}\n                                />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".author\"\n                                    show=\"touched\"\n                                    component=\"div\"\n                                    messages={{\n                                        minLength: 'Must be at least 2 characters',\n                                        maxLength: 'Must be 15 characters or less',\n                                    }}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\">Comment</Label>\n                                <Control.textarea model=\".text\" id=\"text\" name=\"text\" className=\"form-control\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                            </div>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default CampsiteInfo;","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["91","92","93","94","95","96","97"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log(\"Current state is: \" + JSON.stringify(values));\n        alert(\"Current state is: \" + JSON.stringify(values));\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/mflowers/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":6,"column":7,"nodeType":"104","messageId":"105","endLine":6,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":100,"column":33,"nodeType":"108","endLine":100,"endColumn":116},{"ruleId":"106","severity":1,"message":"109","line":110,"column":33,"nodeType":"108","endLine":117,"endColumn":35},{"ruleId":"106","severity":1,"message":"110","line":131,"column":33,"nodeType":"108","endLine":131,"endColumn":114},{"ruleId":"106","severity":1,"message":"109","line":80,"column":37,"nodeType":"108","endLine":88,"endColumn":39},{"ruleId":"106","severity":1,"message":"109","line":105,"column":37,"nodeType":"108","endLine":113,"endColumn":39},{"ruleId":"106","severity":1,"message":"109","line":130,"column":37,"nodeType":"108","endLine":139,"endColumn":39},{"ruleId":"106","severity":1,"message":"109","line":157,"column":37,"nodeType":"108","endLine":164,"endColumn":39},{"ruleId":"106","severity":1,"message":"111","line":181,"column":45,"nodeType":"108","endLine":185,"endColumn":47},{"ruleId":"106","severity":1,"message":"107","line":191,"column":37,"nodeType":"108","endLine":192,"endColumn":66},{"ruleId":"106","severity":1,"message":"110","line":201,"column":37,"nodeType":"108","endLine":204,"endColumn":39},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'required' is assigned a value but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]